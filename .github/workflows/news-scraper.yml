name: News Scraper Bot

on:
  schedule:
    # Run every 6 hours (adjust as needed)
    - cron: '0 */6 * * *'
  workflow_dispatch: # Allow manual trigger

jobs:
  scrape-news:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.11'
        
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        
    - name: Download previous database
      continue-on-error: true
      run: |
        # Try to download the database from the previous run
        if [ -f news.db ]; then
          echo "Database already exists"
        else
          echo "No previous database found, starting fresh"
        fi
        
    - name: Run news scraper
      env:
        NEWS_SITE_1: ${{ secrets.NEWS_SITE_1 }}
        NEWS_SITE_2: ${{ secrets.NEWS_SITE_2 }}
        NEWS_SITE_3: ${{ secrets.NEWS_SITE_3 }}
        NEWS_SITE_4: ${{ secrets.NEWS_SITE_4 }}
        NEWS_SITE_5: ${{ secrets.NEWS_SITE_5 }}
        OPENROUTER_API_KEY: ${{ secrets.OPENROUTER_API_KEY }}
        OPENROUTER_API_URL: ${{ secrets.OPENROUTER_API_URL }}
        AI_MODEL: ${{ secrets.AI_MODEL }}
        AI_SELECTION_PROMPT: ${{ secrets.AI_SELECTION_PROMPT }}
        AI_SUMMARIZATION_PROMPT: ${{ secrets.AI_SUMMARIZATION_PROMPT }}
        AI_TRANSLATION_PROMPT: ${{ secrets.AI_TRANSLATION_PROMPT }}
        TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
        TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
      run: python main.py
      
    - name: Upload database artifact
      uses: actions/upload-artifact@v3
      with:
        name: news-database
        path: news.db
        retention-days: 30
        
    - name: Download database for next run
      uses: actions/download-artifact@v3
      continue-on-error: true
      with:
        name: news-database
        path: .